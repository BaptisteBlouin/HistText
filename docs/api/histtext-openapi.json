{"openapi":"3.0.3","info":{"title":"HistText Core API","description":"API endpoints for searching, analyzing, and processing historical text data","contact":{"name":"HistText Support","email":"support@histtext.example.com"},"license":{"name":""},"version":"1.0.0"},"paths":{"/api/compute-neighbors":{"post":{"tags":["Embeddings"],"summary":"Actix-Web handler for computing nearest neighbors for a word","description":"Accepts a JSON payload with word, database ID, and collection name,\nthen finds the top-10 semantically similar words using cosine similarity.\n\n# Arguments\n* `db` - Database connection pool\n* `query` - JSON payload with word, solr_database_id, and collection_name\n\n# Returns\nHTTP JSON response with top neighbors and a flag indicating if embeddings are available","operationId":"compute_neighbors","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NeighborsRequest"}}},"required":true},"responses":{"200":{"description":"Successfully computed word neighbors using cosine similarity or returned empty if no embeddings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NeighborsResponse"}}}},"500":{"description":"Failed to load embeddings file or compute neighbors"}},"security":[{"bearer_auth":[]}]}},"/api/solr/aliases":{"get":{"tags":["Metadata"],"summary":"Retrieves collection aliases accessible to the authenticated user","description":"Extracts a bearer token from the Authorization header, validates JWT claims\nto build a permission set, and fetches Solr collection aliases via the Solr Admin API.\nReturns either all aliases (for admin users) or only those the user is permitted to access.\n\n# Arguments\n* `req` - HTTP request for authorization header extraction and JWT validation\n* `pool` - Database connection pool for permission and Solr database lookups\n* `query` - Query parameter containing the target solr_database_id\n\n# Returns\nHTTP response with a JSON array of permitted collection alias names or an error status","operationId":"get_aliases","parameters":[{"name":"solr_database_id","in":"query","description":"ID of the Solr database configuration","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"List of collection aliases accessible to the user based on their permissions","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}}},"401":{"description":"Missing or invalid authentication token"},"500":{"description":"Database connection error or Solr API request failure"}},"security":[{"bearer_auth":[]}]}},"/api/solr/collection_metadata":{"get":{"tags":["Metadata"],"summary":"Retrieves field metadata for a specific Solr collection","description":"Fetches Solr schema field definitions, filters out system fields,\nexcludes fields by type/name/pattern based on configuration,\nand optionally facets each remaining field to collect possible values.\n\n# Arguments\n* `pool` - Database connection pool for Solr database configuration lookup\n* `query` - Query parameters containing collection name and solr_database_id\n\n# Returns\nHTTP response with a JSON array of field metadata objects or an error status","operationId":"get_collection_metadata","parameters":[{"name":"collection","in":"query","description":"Target Solr collection name","required":true,"schema":{"type":"string"}},{"name":"solr_database_id","in":"query","description":"ID of the Solr database configuration","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Collection field metadata with field types, properties, and possible values via faceting","content":{"application/json":{"schema":{"type":"array","items":{}}}}},"404":{"description":"Specified Solr database not found"},"500":{"description":"Database connection error, Solr schema access failure, or faceting error"}},"security":[{"bearer_auth":[]}]}},"/api/solr/date_range":{"get":{"tags":["Metadata"],"summary":"Retrieves minimum and maximum dates containing documents in the collection","description":"Facets a Solr date field (MAIN_DATE_VALUE) across a wide range (1500â€“2030)\nin 1-year gaps, parses the facet counts to determine the date boundaries.\n\n# Arguments\n* `pool` - Database connection pool for Solr database configuration lookup\n* `query` - Query parameters containing collection name and solr_database_id\n\n# Returns\nHTTP response with a JSON object containing min and max date strings or an error status","operationId":"get_date_range","parameters":[{"name":"collection","in":"query","description":"Target Solr collection name","required":true,"schema":{"type":"string"}},{"name":"solr_database_id","in":"query","description":"ID of the Solr database configuration","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Minimum and maximum dates containing documents in the collection","content":{"application/json":{"schema":{"type":"object"}}}},"404":{"description":"Specified Solr database not found"},"500":{"description":"Database connection error, Solr faceting failure, or empty date results"}},"security":[{"bearer_auth":[]}]}},"/api/solr/download_csv/{filename}":{"get":{"tags":["SolrDocuments"],"summary":"Actix-Web handler serving a generated CSV file from disk and scheduling its asynchronous deletion after download.","description":"# Arguments\n* `file_path` - Path parameter containing the CSV filename (UUID-based) to retrieve\n\n# Returns\n`Result<NamedFile, Error>` streaming the CSV file back to the client with appropriate MIME type","operationId":"download_csv","parameters":[{"name":"filename","in":"path","required":true,"schema":{"type":"string"},"example":"data_f8a7c4d2.csv"}],"responses":{"200":{"description":"Binary CSV file download stream"},"404":{"description":"CSV file not found - may have expired or been deleted"},"500":{"description":"Error reading or processing the CSV file"}},"security":[{"bearer_auth":[]}]}},"/api/solr/ner":{"get":{"tags":["Named Entity Recognition"],"summary":"Retrieves named entity annotations for documents","description":"Reads a cached NER payload (collection and document IDs) from a JSON file,\nqueries a specialized Solr collection with `-ner` suffix in batches,\nand returns a mapping of document IDs to their entity annotations.\n\n# Arguments\n* `query` - Optional path parameter pointing to the cached payload file\n\n# Returns\nHTTP response with a JSON mapping of document IDs to NER annotations, or an error","operationId":"fetch_ner_data","parameters":[{"name":"path","in":"query","description":"Path to cached NER payload file","required":false,"schema":{"type":"string","nullable":true}}],"responses":{"200":{"description":"Named entity annotations mapped by document ID","content":{"application/json":{"schema":{"type":"object"}}}},"500":{"description":"Error reading cache file, invalid JSON format, or Solr NER query failure"}},"security":[{"bearer_auth":[]}]}},"/api/solr/query":{"get":{"tags":["SolrDocuments"],"summary":"Actix-Web handler that enforces JWT-based permission checks, orchestrates Solr querying,","description":"stats & NER caching, and returns either JSON response or a CSV download stub based on size limits.\n\n# Arguments\n* `req` - HTTP request for authorization header extraction and token validation\n* `pool` - Database connection pool for permission and Solr database lookups\n* `query` - Parsed query parameters containing collection, solr_database_id, and search criteria\n\n# Returns\n`Result<HttpResponse, Error>` with either document JSON, CSV stub with paths for statistics,\nor appropriate error status","operationId":"query_collection","parameters":[{"name":"collection","in":"query","description":"Target Solr collection name","required":true,"schema":{"type":"string"}},{"name":"query","in":"query","description":"Solr query string (e.g. \"title:rust\")","required":false,"schema":{"type":"string","nullable":true}},{"name":"start","in":"query","description":"Pagination offset","required":false,"schema":{"type":"integer","format":"int32","nullable":true,"minimum":0}},{"name":"rows","in":"query","description":"Number of rows per page","required":false,"schema":{"type":"integer","format":"int32","nullable":true,"minimum":0}},{"name":"stats_level","in":"query","description":"Statistics level (e.g. \"All\")","required":false,"schema":{"type":"string","nullable":true}},{"name":"get_ner","in":"query","description":"Whether to include named entity recognition data","required":false,"schema":{"type":"boolean","nullable":true}},{"name":"solr_database_id","in":"query","description":"ID of the Solr database configuration","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"download_only","in":"query","description":"Return only download link instead of full results","required":false,"schema":{"type":"boolean","nullable":true}},{"name":"is_first","in":"query","description":"Return raw Solr response without highlighting","required":false,"schema":{"type":"boolean","nullable":true}}],"responses":{"200":{"description":"Returns paginated document search results with optional highlighting and statistics","content":{"application/json":{"schema":{}}}},"401":{"description":"Missing or invalid JWT token in Authorization header"},"403":{"description":"User lacks permission for the requested collection"},"500":{"description":"Failed to connect to Solr instance, parse response, or write cache files"}},"security":[{"bearer_auth":[]}]}},"/api/solr/stats":{"get":{"tags":["Statistics"],"summary":"Computes statistical analysis for a corpus of documents","description":"Orchestrates the process of:\n1. Reading the cache file containing Solr documents\n2. Detecting document language for stopword selection\n3. Loading appropriate stopwords for the detected language\n4. Processing documents in parallel to gather statistics\n5. Generating final statistical outputs\n6. Cleaning up the cache file after processing\n\n# Arguments\n* `query` - Optional path parameter to the JSON cache file\n\n# Returns\nHTTP response with JSON statistics or detailed error description","operationId":"calculate_statistics","parameters":[{"name":"path","in":"query","description":"Path to cached statistics data","required":false,"schema":{"type":"string","nullable":true}}],"responses":{"200":{"description":"Statistical analysis of query results including distributions, frequency metrics, and n-grams","content":{"application/json":{"schema":{"type":"object"}}}},"500":{"description":"Error reading cache file, language detection failure, or statistical calculation error"}},"security":[{"bearer_auth":[]}]}},"/api/tokenize":{"post":{"tags":["Text Processing"],"summary":"HTTP endpoint for tokenizing text","description":"Accepts a JSON payload with text and tokenization options,\nand returns the tokenized words as a JSON response.\n\n# Arguments\n* `params` - JSON request with text to tokenize and options\n\n# Returns\nHTTP response with JSON array of tokens or an error status","operationId":"tokenize","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenizeRequest"}}},"required":true},"responses":{"200":{"description":"Successfully tokenized text with language-appropriate segmentation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenizeResponse"}}}},"400":{"description":"Invalid request format or missing required fields"},"500":{"description":"Tokenization processing error"}},"security":[{"bearer_auth":[]}]}}},"components":{"schemas":{"CollectionQueryParams":{"type":"object","description":"Query parameters for Solr collection requests.","required":["collection","solr_database_id"],"properties":{"collection":{"type":"string","description":"Target Solr collection name","example":"my_collection"},"download_only":{"type":"boolean","description":"Return only download link instead of full results","example":false,"nullable":true},"get_ner":{"type":"boolean","description":"Whether to include named entity recognition data","example":true,"nullable":true},"is_first":{"type":"boolean","description":"Return raw Solr response without highlighting","example":false,"nullable":true},"query":{"type":"string","description":"Solr query string (e.g. \"title:rust\")","example":"title:rust","nullable":true},"rows":{"type":"integer","format":"int32","description":"Number of rows per page","example":10,"nullable":true,"minimum":0},"solr_database_id":{"type":"integer","format":"int32","description":"ID of the Solr database configuration","example":1},"start":{"type":"integer","format":"int32","description":"Pagination offset","example":0,"nullable":true,"minimum":0},"stats_level":{"type":"string","description":"Statistics level (e.g. \"All\")","example":"All","nullable":true}}},"DashboardStats":{"type":"object","description":"Dashboard statistics for the application","required":["total_docs","total_collections","total_users","active_collections"],"properties":{"active_collections":{"type":"integer","format":"int64","description":"Number of currently active collections","example":"5"},"total_collections":{"type":"integer","format":"int64","description":"Total number of collections","example":"18"},"total_docs":{"type":"integer","format":"int64","description":"Total number of documents in the system","example":"41254"},"total_users":{"type":"integer","format":"int64","description":"Total number of registered users","example":"3"}}},"DatabaseIdQueryParams":{"type":"object","description":"Query parameters for database-level metadata requests","required":["solr_database_id"],"properties":{"solr_database_id":{"type":"integer","format":"int32","description":"ID of the Solr database configuration","example":1}}},"MetadataQueryParams":{"type":"object","description":"Query parameters for collection-specific metadata requests","required":["collection","solr_database_id"],"properties":{"collection":{"type":"string","description":"Target Solr collection name","example":"my_collection"},"solr_database_id":{"type":"integer","format":"int32","description":"ID of the Solr database configuration","example":1}}},"NeighborsRequest":{"type":"object","description":"Request parameters for finding semantically similar words","required":["word","solr_database_id","collection_name"],"properties":{"collection_name":{"type":"string","description":"Collection name in Solr","example":"my_collection"},"solr_database_id":{"type":"integer","format":"int32","description":"ID of the Solr database configuration","example":1},"word":{"type":"string","description":"Word to find neighbors for","example":"democracy"}}},"NeighborsResponse":{"type":"object","description":"Response containing semantically similar words","required":["top_neighbors","has_embeddings"],"properties":{"has_embeddings":{"type":"boolean","description":"Whether embeddings exist for the collection"},"top_neighbors":{"type":"array","items":{"type":"string"},"description":"List of semantically similar words, sorted by similarity"}}},"PathQueryParams":{"type":"object","description":"Query parameters for statistics requests","properties":{"path":{"type":"string","description":"Path to cached statistics data","example":"/tmp/stats_cache.json","nullable":true}}},"TokenizeRequest":{"type":"object","description":"Request parameters for tokenization","required":["text"],"properties":{"cloud":{"type":"boolean","description":"Whether to filter tokens for word cloud use","example":false},"text":{"type":"string","description":"Text to tokenize","example":"This is a sample text for tokenization."}}},"TokenizeResponse":{"type":"object","description":"Response containing tokenized words","required":["words"],"properties":{"words":{"type":"array","items":{"type":"string"},"description":"Tokenized words"}}}},"securitySchemes":{"bearer_auth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}},"security":[{"bearer_auth":[]}],"tags":[{"name":"SolrDocuments","description":"Document search and retrieval with CSV export"},{"name":"Metadata","description":"Collection structure and schema information"},{"name":"Named Entity Recognition","description":"Extract and analyze named entities in text"},{"name":"Statistics","description":"Corpus statistics and distributions"},{"name":"Text Processing","description":"Text tokenization and semantic analysis"},{"name":"Embeddings","description":"Word vector operations and semantic similarity"}]}