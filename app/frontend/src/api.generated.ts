/**
    Hooks in this file were generated by create-rust-app's query-sync feature.

    1 — Generating hooks
    -=-=-=-=-=-=-=-=-=-=-=-
    Execute `create-rust-app` in your project folder and select "query-sync".
    This will generate react-hooks which are missing in this file for all
    functions defined in the `backend/services` folder which have a
    `#[qsync(returns = "<typescript return type>"[, mutate])]` attribute
    as well as one of the following actix_web attributes: `#[post(...)]`,
    `#[get(...)]`, `#[put(...)]`, `#[delete(...)]`, or `#[patch(...)]`.

    2 — Editing hooks
    -=-=-=-=-=-=-=-=-=-
    You may edit the hooks as you see fit, they will not regenerate so long as
    a constant with their name is present. For example:

        const useTodo = ( ... ) => { ... }

    If the "const useTodo" is present, query-sync will not regenerate this hook
    and any changes you make will sustain through subsequent generation. If you
    don't want a particular hook (for whatever reason), you can do this:

        const useTodo = null

    Now, because "const useTodo" is already defined, this hook will not be
    regenerated. As it follows, if you delete "const useTodo = ...", query-sync
    will regenerate that hook, which is useful if you want to start over.
*/
import { useMutation, useQuery, useQueryClient } from 'react-query';

import { useAuth } from './hooks/useAuth';
